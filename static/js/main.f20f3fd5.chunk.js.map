{"version":3,"sources":["variableDict.js","SideBarContainer.js","App.js","scaleFactors.js","colorScale.js","index.js"],"names":["feature_dict","options","SelectMode","props","className","map","option","onChange","handleViewChange","checked","checkedValue","value","name","type","UserInput","showLoadingClassName","isLoading","optionItems","features","feature","predict_options","prediction_features","onClick","ChangePredictor","FeatureChange","Math","abs","SelectedMode","handleFeatureChange","featureValue","style","backgroundColor","class","Modal","handleClose","show","showHideClassName","children","SideBar","model","default_data","status","handleOpen","view","onViewChange","onFeatureChange","onChangePredictor","u","tf","s","attr","url","fetch","then","response","json","data","maxValue","max","d","properties","minValue","min","stops","range","my_data","x","quantile","scaleQuantile","domain","paint","stop","concat","interpolateInferno","mapboxgl","accessToken","url_data","predict","a","getDefaultData","csvDataset","csv","hasHeader","prefetch","batch","featureChangeValues","App","state","modal","score","mode","bind","handleChangePredictor","updatePredictions","updatedPredictionGeometry","modalClose","modalOpen","this","paint_style","Map","container","mapContainer","center","zoom","maxZoom","minZoom","on","firstSymbolId","layers","getStyle","i","length","id","addSource","addLayer","popup","Popup","closeButton","closeOnClick","popupEnter","popupLeave","console","log","myscores","forEachAsync","e","key","k","m","add","push","sub","div","predictions","dataSync","setState","index","new_rate","getSource","setData","getCanvas","cursor","coordinates","geometry","slice","description","text","lngLat","lng","placeholder","document","createElement","ReactDOM","render","setLngLat","setDOMContent","addTo","remove","preventDefault","target","paint_property","setPaintProperty","previousState","setLayoutProperty","ref","el","React","Component","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f20f3fd5.chunk.js","sourcesContent":["export let feature_dict = {\n    \"teacher_total_full_time_equiv\":\"Full Time Teachers (Count)\", \n      \"school_admin_total_full_time_equiv\":\"Full Time Admin Staff (Count)\",\n      \"teacher_total_base_salary\":\"Teacher Average Base Salary ($)\",\n      \"teacher_1_5_years_full_time_equiv\":\"Teacher 1-5 Years Experience (Count)\",\n      \"teacher_6_10_years_full_time_equiv\":\"Teacher 6-10 Years Experience (Count)\",\n      \"teacher_11_20_years_full_time_equiv\":\"Teacher 11-20 Years Experience (Count)\",\n      \"teacher_20_years_full_time_equiv\":\"Teacher 20 Years+ Experience (Count)\",\n      \"teacher_1_5_years_base_salary\":\"Teacher Average Salary 1-5 Years Experience ($)\",\n      \"teacher_6_10_years_base_salary\":\"Teacher Average Salary 6-10 Years Experience ($)\",\n      \"teacher_11_20_years_base_salary\":\"Teacher Average Salary 11-20 Years Experience ($)\",\n      \"teacher_male_full_time_equiv\":\"Full Time Male Teachers (Count)\",\n      \"teacher_female_full_time_equiv\":\"Full Time Female Teachers (Count)\",\n      \"teacher_no_degree_full_time_equiv\":\"Teachers with no Degree (Count)\",\n      \"teacher_ba_degree_full_time_equiv\":\"Teachers with Bachelors Degree (Count)\",\n      \"teacher_ms_degree_full_time_equiv\":\"Teachers with Masters Degree (Count)\",\n      \"teacher_student_ratio\":\"Teacher Student Ratio (%)\",\n      \"all_students\":\"Number of Students\",\n      \"white\":\"Number of White Students\",\n      \"african_american\":\"Number of African Amercian Students\",\n      \"hispanic\":\"Number of Hispanic Students\",\n      \"at_risk\":\"Number of At Risk Students\",\n      \"economic_disadvant\":\"Number of Economic Disadvantaged Students\",\n      \"Grade_Leve_Elementary\":0,\n      \"Grade_Leve_Elementary/Secondary\":0,\n      \"Grade_Leve_High School\":0,\n      \"Grade_Leve_Junior High\":0,\n      \"Grade_Leve_Middle\":0,\n      \"new_rate\":\"Student Performance (Meets Standards,%)\",\n      \"teacher_experience\":\"Teacher Experience (Avg Years)\",\n      \"principal_experience\": \"Principal Experience (Avg Years)\",\n      \"assistant_principal_count\": \"Assistant Principal Count\"\n  }","import React from \"react\"\nimport {feature_dict} from \"./variableDict\";\n\nlet options = [\"2019 School Data\",\"Predict Student Performance\"]\n\nfunction SelectMode(props){\n\n    const renderOptions = (option) => {\n        return (\n          <label key={option} className=\"toggle-container pt12 pb24\">\n            <input onChange={props.handleViewChange} checked={props.checkedValue===option} key={option} value={option} name=\"toggle\" type=\"radio\" />\n            <div className=\"toggle toggle--s \">{option}</div>\n          </label>\n        );\n      }\n  \n    return(\n        <div className='flex-parent flex-parent--center-main'>\n            <div className='toggle-group'>\n                {options.map(renderOptions)}\n            </div>\n        </div>\n    )\n\n}\n\nfunction UserInput(props){\n\n    const showLoadingClassName = props.isLoading ? \"loading\" : \"none\";\n    let optionItems = props.features.map((feature) => <option key={feature} value={feature}>{feature_dict[feature]}</option>);\n\n    let predict_options = props.prediction_features.map((feature) => {\n        return (\n\n                <div className='flex-parent'>\n                    \n                    <div className='flex-child flex-child--no-shrink w300'>\n                    \n                        <div className='flex-parent flex-parent--space-between-main'>\n                        \n                        <div className='flex-child'><button className='btn btn--stroke btn--s' name = \"minus\" key={feature} value={feature} onClick={props.ChangePredictor}>-</button> </div>\n                        \n                            <span className=\"txt-s\">{feature_dict[feature]} </span>\n                        \n                        <div className='flex-child'><button name = \"plus\" className='btn btn--stroke btn--s' key={feature} value={feature} onClick={props.ChangePredictor}>+</button></div>\n                        </div>\n                    </div>\n                    <div className='flex-child flex-child--grow pl6 txt-bold txt-s color-green-light'>\n \n                    {(props.FeatureChange[feature]<0?\"-\":\"+\")} {Math.abs(props.FeatureChange[feature])}\n\n                    </div>\n                </div>\n                \n                )\n    });\n\n    if(props.SelectedMode===\"2019 School Data\" ||props.SelectedMode===\"2019 District Data\"  ){\n        return(\n     \n            <div className=\"inline-block\">\n                 <p className=\"txt-s txt-bold\">Select a variable to change the data displayed on the map.</p>\n               \n                <div className=\"select-container\">\n                    <select onChange={props.handleFeatureChange} value={props.featureValue} className=\"select mb24 mt12 txt-m\">\n                        {optionItems}\n                    </select>\n                    <div className=\"select-arrow\"></div>\n                </div>\n\n                <div className='round shadow-darken10 px12 py12 txt-s'>\n                    <div className='grid mb6'>\n                        <div className='col h12' style={{backgroundColor: \"#000004\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#280b53\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#65156e\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#9f2a63\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#d44842\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#f57d15\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#fac228\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#fcffa4\"}}></div>\n                    </div>\n                    <div className='grid txt-xs'>\n                        <div className='col flex-child--grow'>Low</div>\n                        <div className='col flex-child--grow align-r'>High</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div>\n                <p className=\"txt-s txt-bold\"> Manipulate a <span className=\"txt-kbd\">variable</span> to to see how it impacts Student Performance.</p>\n                <div class={showLoadingClassName}></div>\n                {predict_options}\n\n                <div className='round shadow-darken10 px12 py12 mt24 txt-s'>\n                    <div className='grid mb6'>\n                        <div className='col h12' style={{backgroundColor: \"#000004\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#280b53\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#65156e\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#9f2a63\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#d44842\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#f57d15\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#fac228\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#fcffa4\"}}></div>\n                    </div>\n                    <div className='grid txt-xs'>\n                        <div className='col flex-child--grow'>Low</div>\n                        <div className='col flex-child--grow align-r'>High</div>\n                    </div>\n                </div>\n\n            </div>\n      \n        )\n    }\n\n    \n}\n\nfunction Modal({ handleClose, show, children }){\n\n    const showHideClassName = show ? \"block\" : \"none\";\n\n    return(\n        <div class='flex-parent flex-parent--center-main pt36 z5'>\n                <div class={`shadow-darken50 flex-child bg-white round relative w600 z5 ${showHideClassName}`}>\n                <button class='absolute top right px12 py12 z5' onClick={handleClose}>\n                    X\n                </button>\n                <div class='px24 py24 z5'>\n                    <div class='txt-h3 mb12 z5'>About This Project</div>\n                    <div class='txt-m z5'>\n\n                    <p>\n                    In August 2020 a non-profit organization, Teaching Trust, released detailed educational achievement data from the \n                    Texas Education Agency (TEA) with the hope of encouraging academics, researchers and data scientists to analyze the \n                    data in a meaningful way. The data release consists of annual STAAR (State of Texas Assessment of Academic Readiness) \n                    and TAPR (Texas Academic Performance Reports) data including assessment results, demographic breakdowns, information \n                    on school and district staff and programs. The data is unique as it allows for longitudinal analysis of student and school \n                    performance data between 2012 and 2019 covering about 10% of the total student population in the United States. Student achievement\n                    plays an important role in assessing the performance of school districts and is a main driver of educational funding and policy decisions.\n                    </p>\n                    <br/>\n                    <p>\n                    There has been much research on how student demographics, socioeconomic status and student teacher ratio impact overall school \n                    performance. However, the impacts of teacher and faculty details have been limited. The project team created a <span className=\"txt-bold\">linear regression model</span> on detailed staffing and student \n                    information, using a combination of variables to predict student performance.\n                    </p>\n\n                    <br/>\n\n                    <p className=\"txt-xs\">Andrew Oglesby, Saadiq Mohiuddin, Andrew Flint, Greer Homer, Arunkumar Raja, Youssouf Ouedraogo </p>\n\n                    </div>\n                </div>\n                </div>\n            </div>\n    )\n\n}\n\n\nfunction SideBar(props) {\n    return (\n\n        <>\n            <div>\n                <Modal show={props.status} handleClose={props.handleClose}></Modal>\n                <div className='sidebarStyle prose px12 py12'>\n\n                    <button onClick={props.handleOpen} className='btn btn--s bg-green-faint color-green'>About This Project</button>\n\n                    <h3>Visualizing the Impact of School Staffing Decisions on Student Achievement in Texas</h3>\n                    <p className=\"txt-xs\">Each circle on the map represents one school.</p>\n                    {/* <p className=\"txt-h5\">Visualizing and Predicting student performance using historical achievement data from Texas Education Agency</p> */}\n\n\n                    <SelectMode checkedValue={props.view} handleViewChange={props.onViewChange}/>\n                    {/* <SelectFeature featureValue={props.feature} handleFeatureChange={props.onFeatureChange}/> */}\n\n                    <UserInput \n                        SelectedMode = {props.view} \n                        featureValue={props.feature} \n                        handleFeatureChange={props.onFeatureChange}\n                        features = {props.features}\n                        prediction_features = {props.prediction_features}\n                        ChangePredictor = {props.onChangePredictor}\n                        FeatureChange = {props.FeatureChange}\n                        isLoading={props.isLoading}\n                    />\n\n\n            \n                </div>\n\n            </div>\n\n            </>\n     \n\n\n    )\n}\n\nexport default SideBar\n\n\n\n\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport SideBar from \"./SideBarContainer\"\nimport ReactDOM from 'react-dom';\nimport * as tf from '@tensorflow/tfjs';\n\nimport {feature_dict} from \"./variableDict\";\nimport {u,s} from \"./scaleFactors\"\nimport {style} from \"./colorScale\"\n\nlet model;\nlet default_data;\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FhZGlxbSIsImEiOiJjamJpMXcxa3AyMG9zMzNyNmdxNDlneGRvIn0.wjlI8r1S_-xxtq2d-W5qPA';\n\nconst csvUrl = 'https://texas-education.s3-us-west-2.amazonaws.com/default_data.csv';\nconst url_data = 'https://texas-education.s3-us-west-2.amazonaws.com/2019_rates_v2.min.geojson'\n\n\nconst predict = async () => {\n  model = await tf.loadLayersModel('https://texas-education.s3-us-west-2.amazonaws.com/model3/model.json')\n}\n\nconst getDefaultData = async () =>{\n  const csvDataset = tf.data.csv(\n    csvUrl, {\n      hasHeader:true\n    }).prefetch(100).batch(100);\n\n  default_data = csvDataset\n}\n\nlet features = [\n  \"new_rate\",\n  \"teacher_student_ratio\",\n  \"teacher_total_base_salary\",\n  \"teacher_experience\",\n  \"principal_experience\",\n  \"assistant_principal_count\",\n  \"all_students\",\n  \"at_risk\",\n  \"african_american\",\n  \"white\",\n]\n\nlet prediction_features = [\n  \"teacher_student_ratio\",\n  \"all_students\",\n  \"at_risk\",\n  \"african_american\",\n  \"teacher_total_base_salary\",\n  \"teacher_experience\",\n  \"white\",\n  \"principal_experience\",\n  \"assistant_principal_count\"\n]\n\nlet featureChangeValues ={\n    \"teacher_student_ratio\":1,\n    \"all_students\":50,\n    \"at_risk\":5,\n    \"african_american\":50,\n    \"teacher_total_base_salary\":10000,\n    \"teacher_experience\":5,\n    \"white\":50,\n    \"principal_experience\":5,\n    \"assistant_principal_count\":1,\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal:false,\n      isLoading:false,\n      score:[],\n      feature: 'new_rate',\n      mode: \"2019 School Data\",\n      \"teacher_student_ratio\":0,\n      \"all_students\":0,\n      \"at_risk\":0,\n      \"african_american\":0,\n      \"teacher_total_base_salary\":0,\n      \"teacher_experience\":0,\n      \"white\":0,\n      \"principal_experience\":0,\n      \"assistant_principal_count\":0,\n      \"Grade_Leve_Elementary\":0,\n      \"Grade_Leve_Elementary/Secondary\":0,\n      \"Grade_Leve_High School\":0,\n      \"Grade_Leve_Junior High\":0,\n      \"Grade_Leve_Middle\":0\n    };\n\n    this.handleFeatureChange = this.handleFeatureChange.bind(this);\n    this.handleViewChange = this.handleViewChange.bind(this);\n    this.handleChangePredictor = this.handleChangePredictor.bind(this)\n    this.updatePredictions = this.updatePredictions.bind(this)\n    this.updatedPredictionGeometry = this.updatedPredictionGeometry.bind(this)\n    this.modalClose = this.modalClose.bind(this)\n    this.modalOpen = this.modalOpen.bind(this)\n\n  }\n\n  async componentDidMount() {\n\n    let paint_style = await style(this.state.feature,url_data)\n\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/saadiqm/cjbjougmt08z72rsa7me1duoi',\n      center: [-99.027878, 31.319759],\n      zoom: 6,\n      maxZoom: 12,\n      minZoom: 5\n    });\n\n    this.map.on('load', () => {\n\n\n      var layers = this.map.getStyle().layers;\n      // Find the index of the first symbol layer in the map style\n      var firstSymbolId;\n      for (var i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol') {\n          firstSymbolId = layers[i].id;\n          break;\n        }\n}\n      this.map.addSource('schools', {\n        'type': 'geojson',\n        'data': url_data\n      });\n\n      this.map.addSource('prediction', {\n        'type': 'geojson',\n        'data': url_data\n      });\n\n      this.map.addLayer({\n        'id': '2019 School Data',\n        'type': 'circle',\n        'source': 'schools',\n        'paint': {\n          'circle-opacity': 1,\n          'circle-color': paint_style,\n          'circle-radius': [\n            'interpolate', ['linear'], ['zoom'],\n            7,2,\n            14,10,\n          ],\n        },\n        \n      },firstSymbolId)\n\n      this.map.addLayer({\n        'id': 'Predict Student Performance',\n        'type': 'circle',\n        'source': 'prediction',\n        \"layout\":{\n          \"visibility\":\"none\"\n        },\n        'paint': {\n          'circle-opacity': 0.9,\n          'circle-color': paint_style,\n          'circle-radius': [\n            'interpolate', ['linear'], ['zoom'],\n            7,2,\n            14,10,\n          ],\n        },\n      },firstSymbolId)\n\n    })\n\n    this.popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n\n\n    this.map.on('mouseenter', '2019 School Data', this.popupEnter.bind(this));\n    this.map.on('mouseleave', '2019 School Data', this.popupLeave.bind(this));\n\n\n    this.map.on('mouseenter', 'Predict Student Performance', this.popupEnter.bind(this));\n    this.map.on('mouseleave', 'Predict Student Performance', this.popupLeave.bind(this));\n\n    getDefaultData()\n      .then(()=>console.log(\"data loaded\"))\n\n    predict()\n    .then(()=>console.log(\"model loaded\"))\n  }\n\n  componentDidUpdate(){\n    // console.log(tf.memory());\n  }\n  \n  async updatePredictions(){\n\n    let myscores = []\n\n    await default_data.forEachAsync(e => {\n\n      tf.tidy(() => {\n        let a = []\n\n        for (var key in e) {\n  \n          const k = tf.scalar(this.state[key]);\n          const m = e[key].add(k)\n          a.push(m)\n  \n        }\n  \n        let b = tf.stack(a,1);\n  \n        // scale the input \n        let c = b.sub(u)\n        let d = c.div(s)\n        \n        let predictions = model.predict(d).dataSync()\n  \n        // b.dispose()\n        // c.dispose()\n        // d.dispose()\n  \n        myscores = [...myscores, ...predictions]\n  \n      });\n   \n    });\n\n    this.setState({score:myscores,isLoading:false})\n\n  }\n\n  updatedPredictionGeometry(){\n\n    fetch(url_data)\n    .then(response => response.json())\n    .then(data => {\n      data.features.map((feature, index) =>{\n        feature.properties.new_rate = this.state.score[index]\n      })\n\n      this.map.getSource('prediction').setData(data);\n    });\n  }\n\n  modalOpen() {\n    this.setState({modal:true});\n  }\n\n  modalClose() {\n    this.setState({modal: false});\n  }\n\n  popupEnter(e){\n    this.map.getCanvas().style.cursor = 'pointer';\n\n      var coordinates = e.features[0].geometry.coordinates.slice();\n      var description = e.features[0].properties[this.state.feature];\n      var name = e.features[0].properties[\"School_Nam\"];\n\n      let text = <div className=\"prose\">\n      <p className=\"txt-h5 txt-bold\">{name}</p>\n      <p className=\"txt-h6 txt-bold\">{feature_dict[this.state.feature]}</p>\n      <p className=\"txt-l\">{description}</p>\n      </div>\n\n      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n       }\n\n      const placeholder = document.createElement('div');\n      ReactDOM.render(text, placeholder);\n\n      this.popup.setLngLat(coordinates).setDOMContent(placeholder).addTo(this.map);\n  }\n\n  popupLeave(e){\n    this.map.getCanvas().style.cursor = '';\n    this.popup.remove();\n  }\n\n  handleFeatureChange(e){\n    e.preventDefault();\n\n    this.setState({feature:e.target.value}, () => {\n      console.log(this.state.feature)\n\n      style(this.state.feature,url_data)\n        .then(paint_property => {\n          this.map.setPaintProperty(this.state.mode, 'circle-color', paint_property);\n        })\n    })\n\n  }\n\n  handleViewChange(e) {\n    let previousState = this.state.mode\n    this.setState({mode:e.target.value}, () => {\n\n      this.map.setLayoutProperty(this.state.mode, 'visibility', 'visible');\n      this.map.setLayoutProperty(previousState, 'visibility', 'none');\n      console.log(this.state.mode)\n    });\n  }\n\n  handleChangePredictor(e){\n    let feature = e.target.value\n\n    if (e.target.name === 'minus') {\n    \n      this.setState({[feature]:this.state[feature]-featureChangeValues[feature],isLoading:true},()=>{\n        this.updatePredictions()\n          .then(()=>{\n            this.updatedPredictionGeometry()\n            this.setState({isLoading:false})\n          })\n      })\n\n\n    } else {\n      this.setState({[feature]:this.state[feature]+featureChangeValues[feature],isLoading:true},()=>{\n        this.updatePredictions()\n          .then(()=>{\n            this.updatedPredictionGeometry()\n            this.setState({isLoading:false})\n          })\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <SideBar \n          feature={this.state.feature}\n          onFeatureChange={this.handleFeatureChange}\n          view={this.state.mode}\n          onViewChange={this.handleViewChange}\n          features = {features}\n          prediction_features = {prediction_features}\n          onChangePredictor = {this.handleChangePredictor}\n          status = {this.state.modal}\n          handleClose = {this.modalClose}\n          handleOpen = {this.modalOpen}\n          FeatureChange = {this.state}\n          isLoading = {this.state.isLoading}\n        />\n        <div ref={el => this.mapContainer = el} className='mapContainer' />\n      </div>\n    )\n  }\n}\nexport default App;\n","import * as tf from '@tensorflow/tfjs';\n\n// let u = tf.tensor1d([6.5460815e+02, 3.2479367e+02, 8.0763390e+01, 5.0810824e+04,\n//     1.1113247e+01, 1.8683820e+02, 5.4065762e+00, 6.8529254e-01,\n//     5.8481526e-01, 5.9748985e-02, 1.3731660e-01, 2.9945200e-02,\n//     1.8817395e-01])\n  \n// let s = tf.tensor1d([2.2707634e+05, 7.4294406e+04, 1.7059588e+04, 3.1223866e+07,\n// 1.0382882e+01, 5.1530789e+04, 5.6826550e+01, 1.3408921e+00,\n// 2.4280638e-01, 5.6179043e-02, 1.1846075e-01, 2.9048486e-02,\n// 1.5276451e-01])\n\nlet u = tf.tensor1d([1.4852923e+01, 6.5454712e+02, 3.2489783e+02, 8.0741989e+01,\n    5.0797773e+04, 1.1105479e+01, 1.8639307e+02, 5.4106140e+00,\n    6.8501168e-01, 5.8470333e-01, 5.9827548e-02, 1.3756801e-01,\n    3.0267319e-02, 1.8763381e-01])\n  \nlet s = tf.tensor1d([8.8644180e+00, 2.2751562e+05, 7.4388312e+04, 1.7023676e+04,\n    3.1353340e+07, 1.0387727e+01, 5.1599242e+04, 5.7211445e+01,\n    1.3383917e+00, 2.4282534e-01, 5.6248214e-02, 1.1864305e-01,\n    2.9351208e-02, 1.5242736e-01])\n\nexport {u,s}","import {min,max,range} from 'd3-array';\nimport {scaleQuantile} from 'd3-scale';\nimport {interpolateInferno} from 'd3-scale-chromatic';\n\nlet style = (attr,url) => fetch(url)\n    .then(response => response.json())\n    .then(data => {\n\n      var maxValue = max(data.features, function (d) { return +d.properties[attr] })\n      var minValue = min(data.features, function (d) { return +d.properties[attr] })\n\n      let stops = range(minValue, maxValue, (maxValue-minValue)/30)\n      \n      let my_data = data.features.map(x => x.properties[attr])\n      \n      let quantile = scaleQuantile()\n        .domain(my_data)\n        .range(range(0.1, 0.98, 0.1))\n\n      let paint = [\"interpolate\", [\"linear\"], [\"get\", attr]]\n\n      for (let stop of stops) {\n        paint = paint.concat(stop, interpolateInferno(quantile(stop))) \n      };\n\n      return paint\n      \n    });\n\nexport {style}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}