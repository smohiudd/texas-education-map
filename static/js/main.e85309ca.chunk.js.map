{"version":3,"sources":["variableDict.js","SideBarContainer.js","App.js","scaleFactors.js","colorScale.js","index.js"],"names":["feature_dict","options","SelectMode","props","className","map","option","onChange","handleViewChange","checked","checkedValue","value","name","type","UserInput","optionItems","features","feature","predict_options","prediction_features","onClick","ChangePredictor","FeatureChange","Math","abs","SelectedMode","handleFeatureChange","featureValue","style","backgroundColor","Modal","handleClose","show","showHideClassName","children","class","SideBar","model","default_data","status","handleOpen","view","onViewChange","onFeatureChange","onChangePredictor","u","tf","s","attr","url","fetch","then","response","json","data","maxValue","max","d","properties","minValue","min","stops","range","my_data","x","quantile","scaleQuantile","domain","paint","stop","concat","interpolateInferno","mapboxgl","accessToken","url_data","predict","a","getDefaultData","csvDataset","csv","hasHeader","prefetch","batch","App","state","modal","score","mode","bind","handleChangePredictor","updatePredictions","updatedPredictionGeometry","modalClose","modalOpen","this","paint_style","Map","container","mapContainer","center","zoom","maxZoom","minZoom","on","addSource","addLayer","popup","Popup","closeButton","closeOnClick","popupEnter","popupLeave","myscores","forEachAsync","e","key","k","m","add","push","b","c","sub","div","predictions","dataSync","dispose","setState","index","new_rate","getSource","setData","getCanvas","cursor","coordinates","geometry","slice","description","text","lngLat","lng","placeholder","document","createElement","ReactDOM","render","setLngLat","setDOMContent","addTo","remove","preventDefault","target","console","log","paint_property","setPaintProperty","previousState","setLayoutProperty","ref","el","React","Component","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e85309ca.chunk.js","sourcesContent":["export let feature_dict = {\n    \"teacher_total_full_time_equiv\":\"Full Time Teachers (Count)\", \n      \"school_admin_total_full_time_equiv\":\"Full Time Admin Staff (Count)\",\n      \"teacher_total_base_salary\":\"Teacher Average Base Salary ($)\",\n      \"teacher_1_5_years_full_time_equiv\":\"Teacher 1-5 Years Experience (Count)\",\n      \"teacher_6_10_years_full_time_equiv\":\"Teacher 6-10 Years Experience (Count)\",\n      \"teacher_11_20_years_full_time_equiv\":\"Teacher 11-20 Years Experience (Count)\",\n      \"teacher_20_years_full_time_equiv\":\"Teacher 20 Years+ Experience (Count)\",\n      \"teacher_1_5_years_base_salary\":\"Teacher Average Salary 1-5 Years Experience ($)\",\n      \"teacher_6_10_years_base_salary\":\"Teacher Average Salary 6-10 Years Experience ($)\",\n      \"teacher_11_20_years_base_salary\":\"Teacher Average Salary 11-20 Years Experience ($)\",\n      \"teacher_male_full_time_equiv\":\"Full Time Male Teachers (Count)\",\n      \"teacher_female_full_time_equiv\":\"Full Time Female Teachers (Count)\",\n      \"teacher_no_degree_full_time_equiv\":\"Teachers with no Degree (Count)\",\n      \"teacher_ba_degree_full_time_equiv\":\"Teachers with Bachelors Degree (Count)\",\n      \"teacher_ms_degree_full_time_equiv\":\"Teachers with Masters Degree (Count)\",\n      \"teacher_student_ratio\":\"Teacher Student Ratio (Ratio)\",\n      \"all_students\":\"Number of Students (Count)\",\n      \"white\":\"Number of White Students\",\n      \"african_american\":\"Number of African Amercian Students\",\n      \"hispanic\":\"Number of Hispanic Students\",\n      \"at_risk\":\"Number of At Risk Students\",\n      \"economic_disadvant\":\"Number of Economic Disadvantaged Students\",\n      \"Grade_Leve_Elementary\":0,\n      \"Grade_Leve_Elementary/Secondary\":0,\n      \"Grade_Leve_High School\":0,\n      \"Grade_Leve_Junior High\":0,\n      \"Grade_Leve_Middle\":0,\n      \"new_rate\":\"Student Performance (Meets Standards,%)\",\n      \"teacher_experience\":\"Teacher Experience\",\n      \"principal_experience\": \"Principal Experience\",\n      \"assistant_principal_count\": \"Assistant Principal Count\"\n  }","import React from \"react\"\nimport {feature_dict} from \"./variableDict\";\n\nlet options = [\"2019 School Data\",\"Predict Student Performance\"]\n\nfunction SelectMode(props){\n\n    const renderOptions = (option) => {\n        return (\n          <label key={option} className=\"toggle-container pt12 pb24\">\n            <input onChange={props.handleViewChange} checked={props.checkedValue===option} key={option} value={option} name=\"toggle\" type=\"radio\" />\n            <div className=\"toggle toggle--s \">{option}</div>\n          </label>\n        );\n      }\n  \n    return(\n        <div className='flex-parent flex-parent--center-main'>\n            <div className='toggle-group'>\n                {options.map(renderOptions)}\n            </div>\n        </div>\n    )\n\n}\n\nfunction UserInput(props){\n\n    let optionItems = props.features.map((feature) => <option key={feature} value={feature}>{feature_dict[feature]}</option>);\n\n    let predict_options = props.prediction_features.map((feature) => {\n        return (\n\n\n                <div className='flex-parent'>\n                    <div className='flex-child flex-child--no-shrink w300'>\n                        <div className='flex-parent flex-parent--space-between-main'>\n                        <div className='flex-child'><button className='btn btn--stroke btn--s' name = \"minus\" key={feature} value={feature} onClick={props.ChangePredictor}>-</button> </div>\n                        \n                            <span className=\"txt-s\">{feature_dict[feature]} </span>\n                        \n                        <div className='flex-child'><button name = \"plus\" className='btn btn--stroke btn--s' key={feature} value={feature} onClick={props.ChangePredictor}>+</button></div>\n                        </div>\n                    </div>\n                    <div className='flex-child flex-child--grow pl24 txt-bold color-green-light'>\n \n                    {(props.FeatureChange[feature]<0?\"-\":\"+\")} {Math.abs(props.FeatureChange[feature])}\n\n                    </div>\n                </div>\n                \n                )\n    });\n\n    if(props.SelectedMode===\"2019 School Data\" ||props.SelectedMode===\"2019 District Data\"  ){\n        return(\n     \n            <div className=\"inline-block\">\n                 <p className=\"txt-s txt-em\">Select a variable to change the data displayed on the map.</p>\n               \n                <div className=\"select-container\">\n                    <select onChange={props.handleFeatureChange} value={props.featureValue} className=\"select mb24 mt12 txt-m\">\n                        {optionItems}\n                    </select>\n                    <div className=\"select-arrow\"></div>\n                </div>\n\n                <div className='round shadow-darken10 px12 py12 txt-s'>\n                    <div className='grid mb6'>\n                        <div className='col h12' style={{backgroundColor: \"#000004\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#280b53\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#65156e\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#9f2a63\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#d44842\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#f57d15\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#fac228\"}}></div>\n                        <div className='col h12' style={{backgroundColor: \"#fcffa4\"}}></div>\n                    </div>\n                    <div className='grid txt-xs'>\n                        <div className='col flex-child--grow'>Low</div>\n                        <div className='col flex-child--grow align-r'>High</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div>\n                <p className=\"txt-m txt-em\"> Manipulate a variable to to see how it impacts Student Performance.</p>\n\n                {predict_options}\n            </div>\n      \n        )\n    }\n\n    \n}\n\nfunction Modal({ handleClose, show, children }){\n\n    const showHideClassName = show ? \"block\" : \"none\";\n\n    return(\n        <div class='flex-parent flex-parent--center-main pt36 z5'>\n                <div class={`shadow-darken50 flex-child bg-white round relative w600 z5 ${showHideClassName}`}>\n                <button class='absolute top right px12 py12 z5' onClick={handleClose}>\n                    X\n                </button>\n                <div class='px24 py24 z5'>\n                    <div class='txt-h2 mb12 z5'>Texas Education Agency Student Performance Prediction</div>\n                    <div class='txt-m z5'>\n                    I am some modal body content.\n                    </div>\n                </div>\n                </div>\n            </div>\n    )\n\n}\n\n\nfunction SideBar(props) {\n    return (\n\n        <>\n            <div>\n                \n                <Modal show={props.status} handleClose={props.handleClose}></Modal>\n                <div className='sidebarStyle prose px12 py12'>\n\n                    <button onClick={props.handleOpen} className='btn btn--s bg-green-faint color-green'>About This Project</button>\n\n                    <h3>Texas Education Data Map</h3>\n                    <p className=\"txt-h5\">Visualizing and Predicting student performance using historical achievement data from Texas Education Agency</p>\n\n\n                    <SelectMode checkedValue={props.view} handleViewChange={props.onViewChange}/>\n                    {/* <SelectFeature featureValue={props.feature} handleFeatureChange={props.onFeatureChange}/> */}\n\n                    <UserInput \n                        SelectedMode = {props.view} \n                        featureValue={props.feature} \n                        handleFeatureChange={props.onFeatureChange}\n                        features = {props.features}\n                        prediction_features = {props.prediction_features}\n                        ChangePredictor = {props.onChangePredictor}\n                        FeatureChange = {props.FeatureChange}\n\n                    />\n\n\n            \n                </div>\n\n            </div>\n\n            </>\n     \n\n\n    )\n}\n\nexport default SideBar\n\n\n\n\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport SideBar from \"./SideBarContainer\"\nimport ReactDOM from 'react-dom';\nimport * as tf from '@tensorflow/tfjs';\n\nimport {feature_dict} from \"./variableDict\";\nimport {u,s} from \"./scaleFactors\"\nimport {style} from \"./colorScale\"\n\nlet model;\nlet default_data;\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FhZGlxbSIsImEiOiJjamJpMXcxa3AyMG9zMzNyNmdxNDlneGRvIn0.wjlI8r1S_-xxtq2d-W5qPA';\n\nconst csvUrl = 'https://texas-education.s3-us-west-2.amazonaws.com/default_data_v2.csv';\nconst url_data = 'https://texas-education.s3-us-west-2.amazonaws.com/2019_rates_v2.min.geojson'\n\n\nconst predict = async () => {\n  model = await tf.loadLayersModel('https://texas-education.s3-us-west-2.amazonaws.com/model2/model.json')\n}\n\nconst getDefaultData = async () =>{\n  const csvDataset = tf.data.csv(\n    csvUrl, {\n      hasHeader:true\n    }).prefetch(100).batch(100);\n\n  default_data = csvDataset\n}\n\nlet features = [\n  \"new_rate\",\n  \"all_students\",\n  \"at_risk\",\n  \"african_american\",\n  \"teacher_total_base_salary\",\n  \"teacher_experience\",\n  \"white\",\n  \"principal_experience\",\n  \"assistant_principal_count\"\n]\n\nlet prediction_features = [\n  \"all_students\",\n  \"at_risk\",\n  \"african_american\",\n  \"teacher_total_base_salary\",\n  \"teacher_experience\",\n  \"white\",\n  \"principal_experience\",\n  \"assistant_principal_count\"\n]\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal:false,\n      score:[],\n      feature: 'new_rate',\n      mode: \"2019 School Data\",\n      \"all_students\":0,\n      \"at_risk\":0,\n      \"african_american\":0,\n      \"teacher_total_base_salary\":0,\n      \"teacher_experience\":0,\n      \"white\":0,\n      \"principal_experience\":0,\n      \"assistant_principal_count\":0,\n      \"Grade_Leve_Elementary\":0,\n      \"Grade_Leve_Elementary/Secondary\":0,\n      \"Grade_Leve_High School\":0,\n      \"Grade_Leve_Junior High\":0,\n      \"Grade_Leve_Middle\":0\n    };\n\n    this.handleFeatureChange = this.handleFeatureChange.bind(this);\n    this.handleViewChange = this.handleViewChange.bind(this);\n    this.handleChangePredictor = this.handleChangePredictor.bind(this)\n    this.updatePredictions = this.updatePredictions.bind(this)\n    this.updatedPredictionGeometry = this.updatedPredictionGeometry.bind(this)\n    this.modalClose = this.modalClose.bind(this)\n    this.modalOpen = this.modalOpen.bind(this)\n\n  }\n\n  async componentDidMount() {\n\n    let paint_style = await style(this.state.feature,url_data)\n\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/saadiqm/cjbjougmt08z72rsa7me1duoi',\n      center: [-99.027878, 31.319759],\n      zoom: 6,\n      maxZoom: 12,\n      minZoom: 1\n    });\n\n    this.map.on('load', () => {\n\n      this.map.addSource('schools', {\n        'type': 'geojson',\n        'data': url_data\n      });\n\n      this.map.addSource('prediction', {\n        'type': 'geojson',\n        'data': url_data\n      });\n\n      this.map.addLayer({\n        'id': '2019 School Data',\n        'type': 'circle',\n        'source': 'schools',\n        'paint': {\n          'circle-opacity': 1,\n          'circle-color': paint_style,\n          'circle-radius': [\n            'interpolate', ['linear'], ['zoom'],\n            7,2,\n            14,10,\n          ],\n        },\n        \n      })\n\n      this.map.addLayer({\n        'id': 'Predict Student Performance',\n        'type': 'circle',\n        'source': 'prediction',\n        \"layout\":{\n          \"visibility\":\"none\"\n        },\n        'paint': {\n          'circle-opacity': 0.9,\n          'circle-color': paint_style,\n          'circle-radius': [\n            'interpolate', ['linear'], ['zoom'],\n            7,2,\n            14,10,\n          ],\n        },\n      })\n\n    })\n\n    this.popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n\n\n    this.map.on('mouseenter', '2019 School Data', this.popupEnter.bind(this));\n    this.map.on('mouseleave', '2019 School Data', this.popupLeave.bind(this));\n\n    getDefaultData()\n    predict()\n    \n  }\n\n  componentDidUpdate(){\n    // console.log(tf.memory());\n  }\n  \n  async updatePredictions(){\n\n    let myscores = []\n\n    await default_data.forEachAsync(e => {\n\n      const y = tf.tidy(() => {\n        let a = []\n\n        for (var key in e) {\n  \n          const k = tf.scalar(this.state[key]);\n          const m = e[key].add(k)\n          a.push(m)\n  \n        }\n  \n        let b = tf.stack(a,1);\n  \n        // scale the input \n        let c = b.sub(u)\n        let d = c.div(s)\n        \n        let predictions = model.predict(d).dataSync()\n  \n        b.dispose()\n        c.dispose()\n        d.dispose()\n  \n        myscores = [...myscores, ...predictions]\n  \n      });\n   \n    });\n\n    this.setState({score:myscores})\n\n  }\n\n  updatedPredictionGeometry(){\n\n    fetch(url_data)\n    .then(response => response.json())\n    .then(data => {\n      data.features.map((feature, index) =>{\n        feature.properties.new_rate = this.state.score[index]\n      })\n\n      this.map.getSource('prediction').setData(data);\n    });\n  }\n\n  modalOpen() {\n    this.setState({ modal: true });\n  }\n\n  modalClose() {\n    this.setState({modal: false});\n  }\n\n  popupEnter(e){\n    this.map.getCanvas().style.cursor = 'pointer';\n\n      var coordinates = e.features[0].geometry.coordinates.slice();\n      var description = e.features[0].properties[this.state.feature];\n      var name = e.features[0].properties[\"School_Nam\"];\n\n      let text = <div className=\"prose\">\n      <p className=\"txt-h5 txt-bold\">{name}</p>\n      <p className=\"txt-h6 txt-bold\">{feature_dict[this.state.feature]}</p>\n      <p className=\"txt-l\">{description}</p>\n      </div>\n\n      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n       }\n\n      const placeholder = document.createElement('div');\n      ReactDOM.render(text, placeholder);\n\n      this.popup.setLngLat(coordinates).setDOMContent(placeholder).addTo(this.map);\n  }\n\n  popupLeave(e){\n    this.map.getCanvas().style.cursor = '';\n    this.popup.remove();\n  }\n\n  handleFeatureChange(e){\n    e.preventDefault();\n\n    this.setState({feature:e.target.value}, () => {\n      console.log(this.state.feature)\n\n      style(this.state.feature,url_data)\n        .then(paint_property => {\n          this.map.setPaintProperty(this.state.mode, 'circle-color', paint_property);\n        })\n    })\n\n  }\n\n  handleViewChange(e) {\n    let previousState = this.state.mode\n    this.setState({mode:e.target.value}, () => {\n\n      this.map.setLayoutProperty(this.state.mode, 'visibility', 'visible');\n      this.map.setLayoutProperty(previousState, 'visibility', 'none');\n      console.log(this.state.mode)\n    });\n  }\n\n  handleChangePredictor(e){\n    let feature = e.target.value\n\n    if (e.target.name === 'minus') {\n    \n      this.setState({[feature]:this.state[feature]-10},()=>{\n        this.updatePredictions()\n        this.updatedPredictionGeometry()\n        console.log(this.state[feature])\n      })\n\n\n    } else {\n      this.setState({[feature]:this.state[feature]+10},()=>{\n        this.updatePredictions()\n        this.updatedPredictionGeometry()\n        console.log(this.state[feature])\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <SideBar \n          feature={this.state.feature}\n          onFeatureChange={this.handleFeatureChange}\n          view={this.state.mode}\n          onViewChange={this.handleViewChange}\n          features = {features}\n          prediction_features = {prediction_features}\n          onChangePredictor = {this.handleChangePredictor}\n          status = {this.state.modal}\n          handleClose = {this.modalClose}\n          handleOpen = {this.modalOpen}\n          FeatureChange = {this.state}\n        />\n        <div ref={el => this.mapContainer = el} className='mapContainer' />\n      </div>\n    )\n  }\n}\nexport default App;\n","import * as tf from '@tensorflow/tfjs';\n\nlet u = tf.tensor1d([6.5460815e+02, 3.2479367e+02, 8.0763390e+01, 5.0810824e+04,\n    1.1113247e+01, 1.8683820e+02, 5.4065762e+00, 6.8529254e-01,\n    5.8481526e-01, 5.9748985e-02, 1.3731660e-01, 2.9945200e-02,\n    1.8817395e-01])\n  \nlet s = tf.tensor1d([2.2707634e+05, 7.4294406e+04, 1.7059588e+04, 3.1223866e+07,\n1.0382882e+01, 5.1530789e+04, 5.6826550e+01, 1.3408921e+00,\n2.4280638e-01, 5.6179043e-02, 1.1846075e-01, 2.9048486e-02,\n1.5276451e-01])\n\nexport {u,s}","import {min,max,range} from 'd3-array';\nimport {scaleQuantile} from 'd3-scale';\nimport {interpolateInferno} from 'd3-scale-chromatic';\n\nlet style = (attr,url) => fetch(url)\n    .then(response => response.json())\n    .then(data => {\n\n      var maxValue = max(data.features, function (d) { return +d.properties[attr] })\n      var minValue = min(data.features, function (d) { return +d.properties[attr] })\n\n      let stops = range(minValue, maxValue, (maxValue-minValue)/30)\n      \n      let my_data = data.features.map(x => x.properties[attr])\n      \n      let quantile = scaleQuantile()\n        .domain(my_data)\n        .range(range(0.1, 0.98, 0.1))\n\n      let paint = [\"interpolate\", [\"linear\"], [\"get\", attr]]\n\n      for (let stop of stops) {\n        paint = paint.concat(stop, interpolateInferno(quantile(stop))) \n      };\n\n      return paint\n      \n    });\n\nexport {style}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}